@import 'design_system';

// Animation Timing
$duration: (
  'instant': 100ms,
  'fast': 200ms,
  'normal': 300ms,
  'slow': 500ms,
  'very-slow': 800ms
);

// Easing Functions
$easing: (
  'ease-out-expo': cubic-bezier(0.16, 1, 0.3, 1),
  'ease-out-back': cubic-bezier(0.34, 1.56, 0.64, 1),
  'ease-in-out': cubic-bezier(0.4, 0, 0.2, 1),
  'ease-in': cubic-bezier(0.4, 0, 1, 1),
  'ease-out': cubic-bezier(0, 0, 0.2, 1),
  'linear': linear
);

// Animation Mixins
@mixin animate($properties...) {
  $result: ();
  @each $prop in $properties {
    $result: append($result, $prop map-get($duration, 'normal') map-get($easing, 'ease-out'), comma);
  }
  transition: $result;
}

@mixin animate-all {
  transition: all map-get($duration, 'normal') map-get($easing, 'ease-out');
}

// Security-focused Animations
@keyframes secure-reveal {
  0% {
    filter: blur(8px);
    opacity: 0;
  }
  100% {
    filter: blur(0);
    opacity: 1;
  }
}

@keyframes secure-hide {
  0% {
    filter: blur(0);
    opacity: 1;
  }
  100% {
    filter: blur(8px);
    opacity: 0;
  }
}

@keyframes encryption-progress {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes vault-unlock {
  0% {
    transform: scale(0.95) rotate(0deg);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.02) rotate(-2deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

@keyframes vault-lock {
  0% {
    transform: scale(1) rotate(0deg);
  }
  50% {
    transform: scale(1.02) rotate(2deg);
  }
  100% {
    transform: scale(0.95) rotate(0deg);
    opacity: 0.5;
  }
}

// Feedback Animations
@keyframes success-bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-8px);
  }
  60% {
    transform: translateY(-4px);
  }
}

@keyframes error-shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-4px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(4px);
  }
}

@keyframes warning-pulse {
  0% {
    box-shadow: 0 0 0 0 rgba($color-warning, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba($color-warning, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba($color-warning, 0);
  }
}

// Loading States
@keyframes loading-spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes loading-dots {
  0%, 80%, 100% {
    opacity: 0;
  }
  40% {
    opacity: 1;
  }
}

// Animation Classes
.animate {
  // Entrance Animations
  &-fade-in {
    animation: fade-in map-get($duration, 'normal') map-get($easing, 'ease-out') forwards;
  }

  &-slide-up {
    animation: slide-up map-get($duration, 'normal') map-get($easing, 'ease-out-back') forwards;
  }

  &-slide-down {
    animation: slide-down map-get($duration, 'normal') map-get($easing, 'ease-out-back') forwards;
  }

  // Security Animations
  &-secure-reveal {
    animation: secure-reveal map-get($duration, 'slow') map-get($easing, 'ease-out') forwards;
  }

  &-secure-hide {
    animation: secure-hide map-get($duration, 'fast') map-get($easing, 'ease-in') forwards;
  }

  &-encryption {
    background: linear-gradient(90deg, 
      rgba($color-primary, 0.1),
      rgba($color-primary, 0.2),
      rgba($color-primary, 0.1)
    );
    background-size: 200% 100%;
    animation: encryption-progress 2s map-get($easing, 'linear') infinite;
  }

  // Vault Animations
  &-vault-unlock {
    animation: vault-unlock map-get($duration, 'normal') map-get($easing, 'ease-out-back') forwards;
  }

  &-vault-lock {
    animation: vault-lock map-get($duration, 'normal') map-get($easing, 'ease-in-out') forwards;
  }

  // Feedback Animations
  &-success {
    animation: success-bounce map-get($duration, 'normal') map-get($easing, 'ease-out') forwards;
  }

  &-error {
    animation: error-shake map-get($duration, 'fast') map-get($easing, 'linear');
  }

  &-warning {
    animation: warning-pulse map-get($duration, 'slow') map-get($easing, 'ease-out') infinite;
  }

  // Loading Animations
  &-spinner {
    animation: loading-spinner 1s map-get($easing, 'linear') infinite;
  }

  &-dots {
    animation: loading-dots 1s map-get($easing, 'ease-in-out') infinite;

    &:nth-child(2) {
      animation-delay: 0.2s;
    }
    &:nth-child(3) {
      animation-delay: 0.4s;
    }
  }
}

// Interactive States
.hover-lift {
  @include animate(transform);
  
  &:hover {
    transform: translateY(-2px);
  }
}

.hover-grow {
  @include animate(transform);
  
  &:hover {
    transform: scale(1.02);
  }
}

.hover-highlight {
  @include animate(background-color);
  
  &:hover {
    background-color: rgba($color-primary, 0.1);
  }
}

// Focus States
.focus-ring {
  @include animate(box-shadow);
  
  &:focus {
    box-shadow: 0 0 0 3px rgba($color-primary, 0.4);
  }
}

// Loading States
.loading {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid rgba($color-primary, 0.2);
    border-top-color: $color-primary;
    border-radius: 50%;
    animation: loading-spinner 1s linear infinite;
  }
}

// Page Transitions
.page {
  &-enter {
    opacity: 0;
    transform: translateX(20px);
    
    &-active {
      opacity: 1;
      transform: translateX(0);
      @include animate(opacity, transform);
    }
  }

  &-exit {
    opacity: 1;
    transform: translateX(0);
    
    &-active {
      opacity: 0;
      transform: translateX(-20px);
      @include animate(opacity, transform);
    }
  }
} 